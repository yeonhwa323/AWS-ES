/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */!function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="",r(r.s=3)}([function(t,e,r){r.r(e);var n=__kbnBundles__.get("plugin/dashboard/public");Object.defineProperties(e,Object.getOwnPropertyDescriptors(n))},function(t,e){t.exports=__kbnSharedDeps__.Lodash},function(t,e,r){r.r(e);var n=__kbnBundles__.get("entry/core/public");Object.defineProperties(e,Object.getOwnPropertyDescriptors(n))},function(t,e,r){r(4),__kbnBundles__.define("plugin/dashboardMode/public",r,5)},function(t,e,r){r.p=window.__kbnPublicPath__.dashboardMode},function(t,e,r){"use strict";r.r(e),r.d(e,"plugin",(function(){return s}));var n=r(1),o=r(0),a=r(2);function i(t){return t.startsWith(Object(n.trimStart)(Object(o.createDashboardEditUrl)(""),"/"))?`/${t}`:o.DashboardConstants.LANDING_PAGE_PATH}function d(t,e,r){if(""===t||"#"===t||"#/"===t)return`#${i(e.config.defaultAppId||"")}`;if(!t.startsWith("#/dashboard"))return t;const n=r.getForwards();if(t.startsWith("#/dashboards")){const{rewritePath:e}=n.find((({legacyAppId:t})=>"dashboards"===t));return e(t)}const{rewritePath:o}=n.find((({legacyAppId:t})=>"dashboard"===t));return o(t)}const s=()=>({setup(t){t.application.register({id:"dashboard_mode",title:"Dashboard mode",navLinkStatus:a.AppNavLinkStatus.hidden,mount:async()=>{const[e,{kibanaLegacy:r,urlForwarding:n}]=await t.getStartServices();return r.dashboardConfig.turnHideWriteControlsOn(),e.chrome.navLinks.showOnly("dashboards"),setTimeout((()=>{e.application.navigateToApp("dashboards",{path:d(window.location.hash,r,n)})}),0),()=>{}}})},start(){}})}]);