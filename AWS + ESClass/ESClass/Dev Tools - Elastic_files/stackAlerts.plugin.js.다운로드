/*! Copyright Elasticsearch B.V. and/or licensed to Elasticsearch B.V. under one or more contributor license agreements. 
 * Licensed under the Elastic License 2.0; you may not use this file except in compliance with the Elastic License 2.0. */!function(e){function r(r){for(var t,n,a=r[0],s=r[1],o=0,u=[];o<a.length;o++)n=a[o],Object.prototype.hasOwnProperty.call(i,n)&&i[n]&&u.push(i[n][0]),i[n]=0;for(t in s)Object.prototype.hasOwnProperty.call(s,t)&&(e[t]=s[t]);for(l&&l(r);u.length;)u.shift()()}var t={},i={0:0};function n(r){if(t[r])return t[r].exports;var i=t[r]={i:r,l:!1,exports:{}};return e[r].call(i.exports,i,i.exports,n),i.l=!0,i.exports}n.e=function(e){var r=[],t=i[e];if(0!==t)if(t)r.push(t[2]);else{var a=new Promise((function(r,n){t=i[e]=[r,n]}));r.push(t[2]=a);var s,o=document.createElement("script");o.charset="utf-8",o.timeout=120,n.nc&&o.setAttribute("nonce",n.nc),o.src=function(e){return n.p+"stackAlerts.chunk."+e+".js"}(e);var l=new Error;s=function(r){o.onerror=o.onload=null,clearTimeout(u);var t=i[e];if(0!==t){if(t){var n=r&&("load"===r.type?"missing":r.type),a=r&&r.target&&r.target.src;l.message="Loading chunk "+e+" failed.\n("+n+": "+a+")",l.name="ChunkLoadError",l.type=n,l.request=a,t[1](l)}i[e]=void 0}};var u=setTimeout((function(){s({type:"timeout",target:o})}),12e4);o.onerror=o.onload=s,document.head.appendChild(o)}return Promise.all(r)},n.m=e,n.c=t,n.d=function(e,r,t){n.o(e,r)||Object.defineProperty(e,r,{enumerable:!0,get:t})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,r){if(1&r&&(e=n(e)),8&r)return e;if(4&r&&"object"==typeof e&&e&&e.__esModule)return e;var t=Object.create(null);if(n.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:e}),2&r&&"string"!=typeof e)for(var i in e)n.d(t,i,function(r){return e[r]}.bind(null,i));return t},n.n=function(e){var r=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(r,"a",r),r},n.o=function(e,r){return Object.prototype.hasOwnProperty.call(e,r)},n.p="",n.oe=function(e){throw console.error(e),e};var a=window.stackAlerts_bundle_jsonpfunction=window.stackAlerts_bundle_jsonpfunction||[],s=a.push.bind(a);a.push=r,a=a.slice();for(var o=0;o<a.length;o++)r(a[o]);var l=s;n(n.s=6)}([function(e,r){e.exports=__kbnSharedDeps__.KbnI18n},function(e,r,t){t.r(r);var i=__kbnBundles__.get("plugin/triggersActionsUi/public");Object.defineProperties(r,Object.getOwnPropertyDescriptors(i))},function(e,r){e.exports=__kbnSharedDeps__.React},function(e,r,t){e.exports=t(5)(1075)},function(e,r,t){"use strict";t.d(r,"a",(function(){return a}));var i=t(0),n=t(1);const a=e=>{const{index:r,timeField:t,esQuery:a,size:s,threshold:o,timeWindowSize:l,thresholdComparator:u}=e,d={errors:{}},c={index:new Array,timeField:new Array,esQuery:new Array,size:new Array,threshold0:new Array,threshold1:new Array,thresholdComparator:new Array,timeWindowSize:new Array};if(d.errors=c,r&&0!==r.length||c.index.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredIndexText",{defaultMessage:"Index is required."})),t||c.timeField.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredTimeFieldText",{defaultMessage:"Time field is required."})),a)try{JSON.parse(a).query||c.esQuery.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredEsQueryText",{defaultMessage:"Query field is required."}))}catch(e){c.esQuery.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.jsonQueryText",{defaultMessage:"Query must be valid JSON."}))}else c.esQuery.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredQueryText",{defaultMessage:"Elasticsearch query is required."}));return o&&0!==o.length&&void 0!==o[0]||c.threshold0.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredThreshold0Text",{defaultMessage:"Threshold 0 is required."})),u&&n.builtInComparators[u].requiredValues>1&&(!o||void 0===o[1]||o&&o.length<n.builtInComparators[u].requiredValues)&&c.threshold1.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredThreshold1Text",{defaultMessage:"Threshold 1 is required."})),o&&2===o.length&&o[0]>o[1]&&c.threshold1.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.greaterThenThreshold0Text",{defaultMessage:"Threshold 1 must be > Threshold 0."})),l||c.timeWindowSize.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredTimeWindowSizeText",{defaultMessage:"Time window size is required."})),s||c.size.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.requiredSizeText",{defaultMessage:"Size is required."})),(s&&s<0||s>1e4)&&c.size.push(i.i18n.translate("xpack.stackAlerts.esQuery.ui.validation.error.invalidSizeRangeText",{defaultMessage:"Size must be between 0 and {max, number}.",values:{max:1e4}})),d}},function(e,r){e.exports=__kbnSharedDeps_npm__},function(e,r,t){t(7),__kbnBundles__.define("plugin/stackAlerts/public",t,8)},function(e,r,t){t.p=window.__kbnPublicPath__.stackAlerts},function(e,r,t){"use strict";t.r(r),t.d(r,"plugin",(function(){return p}));var i=t(3),n=t.n(i),a=t(2),s=t(0);const o=e=>{const{index:r,geoField:t,entity:i,dateField:n,boundaryType:a,boundaryIndexTitle:o,boundaryGeoField:l}=e,u={errors:{}},d={index:new Array,indexId:new Array,geoField:new Array,entity:new Array,dateField:new Array,boundaryType:new Array,boundaryIndexTitle:new Array,boundaryIndexId:new Array,boundaryGeoField:new Array};return u.errors=d,r||d.index.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredIndexTitleText",{defaultMessage:"Index pattern is required."})),t||d.geoField.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredGeoFieldText",{defaultMessage:"Geo field is required."})),i||d.entity.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredEntityText",{defaultMessage:"Entity is required."})),n||d.dateField.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredDateFieldText",{defaultMessage:"Date field is required."})),a||d.boundaryType.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredBoundaryTypeText",{defaultMessage:"Boundary type is required."})),o||d.boundaryIndexTitle.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredBoundaryIndexTitleText",{defaultMessage:"Boundary index pattern title is required."})),l||d.boundaryGeoField.push(s.i18n.translate("xpack.stackAlerts.geoContainment.error.requiredBoundaryGeoFieldText",{defaultMessage:"Boundary geo field is required."})),u};var l=t(1);const u=e=>{const{index:r,timeField:t,aggType:i,aggField:n,groupBy:a,termSize:o,termField:u,threshold:d,timeWindowSize:c,thresholdComparator:p}=e,h={errors:{}},g={aggField:new Array,termSize:new Array,termField:new Array,timeWindowSize:new Array,threshold0:new Array,threshold1:new Array,index:new Array,timeField:new Array};return h.errors=g,r&&0!==r.length||g.index.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredIndexText",{defaultMessage:"Index is required."})),t||g.timeField.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredTimeFieldText",{defaultMessage:"Time field is required."})),i&&l.builtInAggregationTypes[i].fieldRequired&&!n&&g.aggField.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredAggFieldText",{defaultMessage:"Aggregation field is required."})),a&&l.builtInGroupByTypes[a]&&l.builtInGroupByTypes[a].sizeRequired&&!o&&g.termSize.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredTermSizedText",{defaultMessage:"Term size is required."})),a&&l.builtInGroupByTypes[a].validNormalizedTypes&&l.builtInGroupByTypes[a].validNormalizedTypes.length>0&&!u&&g.termField.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredTermFieldText",{defaultMessage:"Term field is required."})),c||g.timeWindowSize.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredTimeWindowSizeText",{defaultMessage:"Time window size is required."})),d&&0!==d.length&&void 0!==d[0]||g.threshold0.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredThreshold0Text",{defaultMessage:"Threshold0 is required."})),p&&l.builtInComparators[p].requiredValues>1&&(!d||void 0===d[1]||d&&d.length<l.builtInComparators[p].requiredValues)&&g.threshold1.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.requiredThreshold1Text",{defaultMessage:"Threshold1 is required."})),d&&2===d.length&&d[0]>d[1]&&g.threshold1.push(s.i18n.translate("xpack.stackAlerts.threshold.ui.validation.error.greaterThenThreshold0Text",{defaultMessage:"Threshold1 should be > Threshold0."})),h};var d=t(4);function c({ruleTypeRegistry:e,config:r}){e.register({id:".geo-containment",description:s.i18n.translate("xpack.stackAlerts.geoContainment.descriptionText",{defaultMessage:"Alert when an entity is contained within a geo boundary."}),iconClass:"globe",documentationUrl:null,alertParamsExpression:Object(a.lazy)((()=>t.e(3).then(t.bind(null,48)))),validate:o,requiresAppContext:!1}),e.register({id:".index-threshold",description:s.i18n.translate("xpack.stackAlerts.threshold.ui.alertType.descriptionText",{defaultMessage:"Alert when an aggregated query meets the threshold."}),iconClass:"alert",documentationUrl:e=>e.links.alerting.indexThreshold,alertParamsExpression:Object(a.lazy)((()=>t.e(2).then(t.bind(null,49)))),validate:u,defaultActionMessage:s.i18n.translate("xpack.stackAlerts.threshold.ui.alertType.defaultActionMessage",{defaultMessage:"alert '\\{\\{alertName\\}\\}' is active for group '\\{\\{context.group\\}\\}':\n\n- Value: \\{\\{context.value\\}\\}\n- Conditions Met: \\{\\{context.conditions\\}\\} over \\{\\{params.timeWindowSize\\}\\}\\{\\{params.timeWindowUnit\\}\\}\n- Timestamp: \\{\\{context.date\\}\\}"}),requiresAppContext:!1}),e.register({id:".es-query",description:s.i18n.translate("xpack.stackAlerts.esQuery.ui.alertType.descriptionText",{defaultMessage:"Alert on matches against an Elasticsearch query."}),iconClass:"logoElastic",documentationUrl:e=>e.links.alerting.esQuery,alertParamsExpression:Object(a.lazy)((()=>t.e(1).then(t.bind(null,50)))),validate:d.a,defaultActionMessage:s.i18n.translate("xpack.stackAlerts.esQuery.ui.alertType.defaultActionMessage",{defaultMessage:"Elasticsearch query alert '\\{\\{alertName\\}\\}' is active:\n\n- Value: \\{\\{context.value\\}\\}\n- Conditions Met: \\{\\{context.conditions\\}\\} over \\{\\{params.timeWindowSize\\}\\}\\{\\{params.timeWindowUnit\\}\\}\n- Timestamp: \\{\\{context.date\\}\\}"}),requiresAppContext:!1})}class plugin_StackAlertsPublicPlugin{constructor(e){n()(this,"initializerContext",void 0),this.initializerContext=e}setup(e,{triggersActionsUi:r}){c({ruleTypeRegistry:r.ruleTypeRegistry,config:this.initializerContext.config.get()})}start(){}stop(){}}const p=e=>new plugin_StackAlertsPublicPlugin(e)},function(e,r){e.exports=__kbnSharedDeps__.ElasticEui},function(e,r){e.exports=__kbnSharedDeps__.EmotionReact},function(e,r){e.exports=__kbnSharedDeps__.KbnI18nReact},function(e,r,t){t.r(r);var i=__kbnBundles__.get("plugin/kibanaReact/public");Object.defineProperties(r,Object.getOwnPropertyDescriptors(i))},function(e,r){e.exports=__kbnSharedDeps__.Lodash},function(e,r,t){t.r(r);var i=__kbnBundles__.get("plugin/data/public");Object.defineProperties(r,Object.getOwnPropertyDescriptors(i))},function(e,r){e.exports=__kbnSharedDeps__.Rxjs},function(e,r){e.exports=__kbnSharedDeps__.ElasticCharts},function(e,r){e.exports=__kbnSharedDeps__.MomentTimezone},function(e,r,t){t.r(r);var i=__kbnBundles__.get("plugin/alerting/common/parse_duration");Object.defineProperties(r,Object.getOwnPropertyDescriptors(i))},function(e,r,t){t.r(r);var i=__kbnBundles__.get("plugin/esUiShared/public");Object.defineProperties(r,Object.getOwnPropertyDescriptors(i))},function(e,r,t){t.r(r);var i=__kbnBundles__.get("plugin/alerting/common");Object.defineProperties(r,Object.getOwnPropertyDescriptors(i))}]);