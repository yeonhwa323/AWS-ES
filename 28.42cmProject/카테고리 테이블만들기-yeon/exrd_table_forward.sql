/* 회원 */ 
CREATE TABLE MEMBER (
	MEMBER_ID NUMBER NOT NULL, /* 회원 ID */
	MEMBER_PWD VARCHAR2(20), /* 회원 비밀번호 */
	MEMBER_NAME VARCHAR2(50), /* 회원 이름 */
	MEMBER_EMAIL VARCHAR2(1000), /* 회원 이메일 */
	MEMBER_ADDR VARCHAR2(4000), /* 회원 주소 */
	MILEAGE NUMBER DEFAULT 0, /* 마일리지 */
	COUPON_ID NUMBER, /* 쿠폰 ID */
	GRADE_ID NUMBER /* 등급명 ID */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN MEMBER.MEMBER_PWD IS '회원 비밀번호';

COMMENT ON COLUMN MEMBER.MEMBER_NAME IS '회원 이름';

COMMENT ON COLUMN MEMBER.MEMBER_EMAIL IS '회원 이메일';

COMMENT ON COLUMN MEMBER.MEMBER_ADDR IS '회원 주소';

COMMENT ON COLUMN MEMBER.MILEAGE IS '마일리지';

COMMENT ON COLUMN MEMBER.COUPON_ID IS '쿠폰 ID';

COMMENT ON COLUMN MEMBER.GRADE_ID IS '등급명 ID';

CREATE UNIQUE INDEX PK_MEMBER
	ON MEMBER (
		MEMBER_ID ASC
	);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT PK_MEMBER
		PRIMARY KEY (
			MEMBER_ID
		);

/* 관리자 */
CREATE TABLE ADMIN (
	ADMIN_ID VARCHAR2(100) NOT NULL, /* 관리자 ID */
	ADMIN_PWD VARCHAR2(15), /* 관리자 비밀번호 */
	ADMIN_NICK VARCHAR2(30) /* 관리자 닉네임 */
);

COMMENT ON TABLE ADMIN IS '관리자';

COMMENT ON COLUMN ADMIN.ADMIN_ID IS '관리자 ID';

COMMENT ON COLUMN ADMIN.ADMIN_PWD IS '관리자 비밀번호';

COMMENT ON COLUMN ADMIN.ADMIN_NICK IS '관리자 닉네임';

CREATE UNIQUE INDEX PK_ADMIN
	ON ADMIN (
		ADMIN_ID ASC
	);

ALTER TABLE ADMIN
	ADD
		CONSTRAINT PK_ADMIN
		PRIMARY KEY (
			ADMIN_ID
		);

/* 상품 */
CREATE TABLE PRODUCT (
	PD_ID NUMBER NOT NULL, /* 상품 ID */
	PD_NAME VARCHAR2(1000), /* 상품명 */
	PD_PRICE NUMBER, /* 상품 가격 */
	PD_INFO VARCHAR2(4000), /* 상품 설명 */
	PD_SALES_QUANTITY NUMBER, /* 상품 판매량 */
	PD_DISCOUNT_RATE NUMBER DEFAULT 1, /* 상품 할인율 */
	BRAND_ID NUMBER, /* 브랜드 ID */
	MAIN_CTGR_ID NUMBER, /* 주요 카테고리 ID */
	LARGE_CTGR_ID NUMBER, /* 상품 대분류 ID */
	MEDIUM_CTGR_ID NUMBER, /* 상품 중분류 ID */
	SMALL_CTGR_ID NUMBER /* 상품 소분류 ID */
);

COMMENT ON TABLE PRODUCT IS '상품';

COMMENT ON COLUMN PRODUCT.PD_ID IS '상품 ID';

COMMENT ON COLUMN PRODUCT.PD_NAME IS '상품명';

COMMENT ON COLUMN PRODUCT.PD_PRICE IS '상품 가격';

COMMENT ON COLUMN PRODUCT.PD_INFO IS '상품 설명';

COMMENT ON COLUMN PRODUCT.PD_SALES_QUANTITY IS '상품 판매량';

COMMENT ON COLUMN PRODUCT.PD_DISCOUNT_RATE IS '상품 할인율';

COMMENT ON COLUMN PRODUCT.BRAND_ID IS '브랜드 ID';

COMMENT ON COLUMN PRODUCT.MAIN_CTGR_ID IS '주요 카테고리 ID';

COMMENT ON COLUMN PRODUCT.LARGE_CTGR_ID IS '상품 대분류 ID';

COMMENT ON COLUMN PRODUCT.MEDIUM_CTGR_ID IS '상품 중분류 ID';

COMMENT ON COLUMN PRODUCT.SMALL_CTGR_ID IS '상품 소분류 ID';

CREATE UNIQUE INDEX PK_PRODUCT
	ON PRODUCT (
		PD_ID ASC
	);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT PK_PRODUCT
		PRIMARY KEY (
			PD_ID
		);

/* 등급 */
CREATE TABLE GRADE (
	GRADE_ID NUMBER DEFAULT 1 NOT NULL, /* 등급명 ID */
	GRADE_NAME VARCHAR2(10) NOT NULL /* 등급명 */
);

COMMENT ON TABLE GRADE IS '등급';

COMMENT ON COLUMN GRADE.GRADE_ID IS '등급명 ID';

COMMENT ON COLUMN GRADE.GRADE_NAME IS '등급명';

CREATE UNIQUE INDEX PK_GRADE
	ON GRADE (
		GRADE_ID ASC
	);

ALTER TABLE GRADE
	ADD
		CONSTRAINT PK_GRADE
		PRIMARY KEY (
			GRADE_ID
		);

/* 브랜드 좋아요 */
CREATE TABLE BRAND_LIKE (
	BRAND_LIKE_ID NUMBER NOT NULL, /* 좋아요 ID */
	MEMBER_ID NUMBER, /* 회원 ID */
	BRAND_ID NUMBER /* 브랜드 ID */
);

COMMENT ON TABLE BRAND_LIKE IS '브랜드 좋아요';

COMMENT ON COLUMN BRAND_LIKE.BRAND_LIKE_ID IS '좋아요 ID';

COMMENT ON COLUMN BRAND_LIKE.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN BRAND_LIKE.BRAND_ID IS '브랜드 ID';

CREATE UNIQUE INDEX PK_BRAND_LIKE
	ON BRAND_LIKE (
		BRAND_LIKE_ID ASC
	);

ALTER TABLE BRAND_LIKE
	ADD
		CONSTRAINT PK_BRAND_LIKE
		PRIMARY KEY (
			BRAND_LIKE_ID
		);

/* 리뷰 */
CREATE TABLE REVIEW (
	REVIEW_ID NUMBER NOT NULL, /* 리뷰 ID */
	REVIEW_CONTENT VARCHAR2(4000), /* 리뷰 내용 */
	IMAGE_URL VARCHAR2(4000), /* 이미지 url */
	REVIEW_RATING NUMBER(1), /* 리뷰 평점 */
	PD_ID NUMBER, /* 상품 ID */
	MEMBER_ID NUMBER /* 회원 ID */
);

COMMENT ON TABLE REVIEW IS '리뷰';

COMMENT ON COLUMN REVIEW.REVIEW_ID IS '리뷰 ID';

COMMENT ON COLUMN REVIEW.REVIEW_CONTENT IS '리뷰 내용';

COMMENT ON COLUMN REVIEW.IMAGE_URL IS '이미지 url';

COMMENT ON COLUMN REVIEW.REVIEW_RATING IS '리뷰 평점';

COMMENT ON COLUMN REVIEW.PD_ID IS '상품 ID';

COMMENT ON COLUMN REVIEW.MEMBER_ID IS '회원 ID';

CREATE UNIQUE INDEX PK_REVIEW
	ON REVIEW (
		REVIEW_ID ASC
	);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT PK_REVIEW
		PRIMARY KEY (
			REVIEW_ID
		);

/* 장바구니 */
CREATE TABLE CART (
	CART_ID NUMBER NOT NULL, /* 장바구니ID */
	MEMBER_ID NUMBER, /* 회원 ID */
	PD_ID NUMBER /* 상품 ID */
);

COMMENT ON TABLE CART IS '장바구니';

COMMENT ON COLUMN CART.CART_ID IS '장바구니ID';

COMMENT ON COLUMN CART.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN CART.PD_ID IS '상품 ID';

CREATE UNIQUE INDEX PK_CART
	ON CART (
		CART_ID ASC
	);

ALTER TABLE CART
	ADD
		CONSTRAINT PK_CART
		PRIMARY KEY (
			CART_ID
		);

/* 공지사항 */
CREATE TABLE NOTICE_BOARD (
	NOTICE_ID NUMBER NOT NULL, /* 공지사항 게시판 아이디 */
	NOTICE_TITLE VARCHAR2(1000), /* 공지사항 제목 */
	NOTICE_CONTENT VARCHAR2(4000), /* 공지사항 내용 */
	NOTICE_DATE DATE DEFAULT SYSDATE, /* 공지사항 등록일 */
	ADMIN_ID VARCHAR2(100) /* 관리자 ID */
);

COMMENT ON TABLE NOTICE_BOARD IS '공지사항';

COMMENT ON COLUMN NOTICE_BOARD.NOTICE_ID IS '공지사항 게시판 아이디';

COMMENT ON COLUMN NOTICE_BOARD.NOTICE_TITLE IS '공지사항 제목';

COMMENT ON COLUMN NOTICE_BOARD.NOTICE_CONTENT IS '공지사항 내용';

COMMENT ON COLUMN NOTICE_BOARD.NOTICE_DATE IS '공지사항 등록일';

COMMENT ON COLUMN NOTICE_BOARD.ADMIN_ID IS '관리자 ID';

CREATE UNIQUE INDEX PK_NOTICE_BOARD
	ON NOTICE_BOARD (
		NOTICE_ID ASC
	);

ALTER TABLE NOTICE_BOARD
	ADD
		CONSTRAINT PK_NOTICE_BOARD
		PRIMARY KEY (
			NOTICE_ID
		);

/* 배송 */
CREATE TABLE DELIVERY (
	DELIVERY_ID NUMBER NOT NULL, /* 배송ID */
	ORDER_NUM NUMBER, /* 주문번호 */
	DELIVERY_COMPANY VARCHAR2(1000), /* 택배사 */
	DELIVERY_DATE DATE DEFAULT SYSDATE, /* 주문일 */
	DELIVERY_STATE NUMBER DEFAULT 1, /* 배송상태 */
	TRACKING_NUM VARCHAR2(4000), /* 송장번호 */
	TOTAL_PAY NUMBER, /* 결제금액 */
	D_S_DATE DATE, /* 배송시작일 */
	D_E_DATE DATE, /* 배송종료일 */
	DELIVERY_PAY NUMBER, /* 배송비 */
	PAY_ID NUMBER /* 결제ID */
);

COMMENT ON TABLE DELIVERY IS '배송';

COMMENT ON COLUMN DELIVERY.DELIVERY_ID IS '배송ID';

COMMENT ON COLUMN DELIVERY.ORDER_NUM IS '주문번호';

COMMENT ON COLUMN DELIVERY.DELIVERY_COMPANY IS '택배사';

COMMENT ON COLUMN DELIVERY.DELIVERY_DATE IS '주문일';

COMMENT ON COLUMN DELIVERY.DELIVERY_STATE IS '배송상태';

COMMENT ON COLUMN DELIVERY.TRACKING_NUM IS '송장번호';

COMMENT ON COLUMN DELIVERY.TOTAL_PAY IS '결제금액';

COMMENT ON COLUMN DELIVERY.D_S_DATE IS '배송시작일';

COMMENT ON COLUMN DELIVERY.D_E_DATE IS '배송종료일';

COMMENT ON COLUMN DELIVERY.DELIVERY_PAY IS '배송비';

COMMENT ON COLUMN DELIVERY.PAY_ID IS '결제ID';

CREATE UNIQUE INDEX PK_DELIVERY
	ON DELIVERY (
		DELIVERY_ID ASC
	);

ALTER TABLE DELIVERY
	ADD
		CONSTRAINT PK_DELIVERY
		PRIMARY KEY (
			DELIVERY_ID
		);

/* 결제 */
CREATE TABLE PAY (
	PAY_ID NUMBER NOT NULL, /* 결제ID */
	MEMBER_ID NUMBER, /* 회원 ID */
	D_ADDR_NAME VARCHAR2(100), /* 배송지 명 */
	RECEIVER VARCHAR2(50), /* 수령인 */
	D_ADDR VARCHAR2(4000), /* 배송지 */
	TEL_NUM1 VARCHAR2(15), /* 연락처1 */
	TEL_NUM2 VARCHAR2(15), /* 연락처2 */
	USE_MILEAGE NUMBER, /* 사용 마일리지 */
	TOTAL_PAY NUMBER, /* 결제금액 */
	PAY_TYPE_ID NUMBER, /* 결제 방법 ID */
	PD_ID NUMBER, /* 상품 ID */
	COUPON_ID NUMBER /* 쿠폰 ID */
);

COMMENT ON TABLE PAY IS '결제';

COMMENT ON COLUMN PAY.PAY_ID IS '결제ID';

COMMENT ON COLUMN PAY.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN PAY.D_ADDR_NAME IS '배송지 명';

COMMENT ON COLUMN PAY.RECEIVER IS '수령인';

COMMENT ON COLUMN PAY.D_ADDR IS '배송지';

COMMENT ON COLUMN PAY.TEL_NUM1 IS '연락처1';

COMMENT ON COLUMN PAY.TEL_NUM2 IS '연락처2';

COMMENT ON COLUMN PAY.USE_MILEAGE IS '사용 마일리지';

COMMENT ON COLUMN PAY.TOTAL_PAY IS '결제금액';

COMMENT ON COLUMN PAY.PAY_TYPE_ID IS '결제 방법 ID';

COMMENT ON COLUMN PAY.PD_ID IS '상품 ID';

COMMENT ON COLUMN PAY.COUPON_ID IS '쿠폰 ID';

CREATE UNIQUE INDEX PK_PAY
	ON PAY (
		PAY_ID ASC
	);

ALTER TABLE PAY
	ADD
		CONSTRAINT PK_PAY
		PRIMARY KEY (
			PAY_ID
		);

/* 환불 */
CREATE TABLE REFUND (
	REFUND_ID NUMBER NOT NULL, /* 환불ID */
	REFUND_REASON VARCHAR2(4000), /* 환불사유 */
	REFUND_DATE DATE DEFAULT SYSDATE, /* 환불날짜 */
	PAY_ID NUMBER /* 결제ID */
);

COMMENT ON TABLE REFUND IS '환불';

COMMENT ON COLUMN REFUND.REFUND_ID IS '환불ID';

COMMENT ON COLUMN REFUND.REFUND_REASON IS '환불사유';

COMMENT ON COLUMN REFUND.REFUND_DATE IS '환불날짜';

COMMENT ON COLUMN REFUND.PAY_ID IS '결제ID';

CREATE UNIQUE INDEX PK_REFUND
	ON REFUND (
		REFUND_ID ASC
	);

ALTER TABLE REFUND
	ADD
		CONSTRAINT PK_REFUND
		PRIMARY KEY (
			REFUND_ID
		);

/* 상품 상태 */
CREATE TABLE PRODUCT_STATE (
	STATE_ID NUMBER NOT NULL, /* 상품 상태 ID */
	STATE_NAME VARCHAR2(30) /* 상품 상태 이름 */
);

COMMENT ON TABLE PRODUCT_STATE IS '상품 상태';

COMMENT ON COLUMN PRODUCT_STATE.STATE_ID IS '상품 상태 ID';

COMMENT ON COLUMN PRODUCT_STATE.STATE_NAME IS '상품 상태 이름';

CREATE UNIQUE INDEX PK_PRODUCT_STATE
	ON PRODUCT_STATE (
		STATE_ID ASC
	);

ALTER TABLE PRODUCT_STATE
	ADD
		CONSTRAINT PK_PRODUCT_STATE
		PRIMARY KEY (
			STATE_ID
		);

/* 브랜드 */
CREATE TABLE BRAND (
	BRAND_ID NUMBER NOT NULL, /* 브랜드 ID */
	BRAND_NAME VARCHAR2(100) /* 브랜드 명 */
);

COMMENT ON TABLE BRAND IS '브랜드';

COMMENT ON COLUMN BRAND.BRAND_ID IS '브랜드 ID';

COMMENT ON COLUMN BRAND.BRAND_NAME IS '브랜드 명';

CREATE UNIQUE INDEX PK_BRAND
	ON BRAND (
		BRAND_ID ASC
	);

ALTER TABLE BRAND
	ADD
		CONSTRAINT PK_BRAND
		PRIMARY KEY (
			BRAND_ID
		);

/* 쿠폰 */
CREATE TABLE COUPON (
	COUPON_ID NUMBER NOT NULL, /* 쿠폰 ID */
	COUPON_NAME VARCHAR2(200), /* 쿠폰명 */
	COUPON_DISCOUNT NUMBER /* 쿠폰별 할인율 */
);

COMMENT ON TABLE COUPON IS '쿠폰';

COMMENT ON COLUMN COUPON.COUPON_ID IS '쿠폰 ID';

COMMENT ON COLUMN COUPON.COUPON_NAME IS '쿠폰명';

COMMENT ON COLUMN COUPON.COUPON_DISCOUNT IS '쿠폰별 할인율';

CREATE UNIQUE INDEX PK_COUPON
	ON COUPON (
		COUPON_ID ASC
	);

ALTER TABLE COUPON
	ADD
		CONSTRAINT PK_COUPON
		PRIMARY KEY (
			COUPON_ID
		);

/* 결제 방법 */
CREATE TABLE PAY_TYPE (
	PAY_TYPE_ID NUMBER NOT NULL, /* 결제 방법 ID */
	PAY_TYPE_NAME VARCHAR2(100) /* 결제 방법 */
);

COMMENT ON TABLE PAY_TYPE IS '결제 방법';

COMMENT ON COLUMN PAY_TYPE.PAY_TYPE_ID IS '결제 방법 ID';

COMMENT ON COLUMN PAY_TYPE.PAY_TYPE_NAME IS '결제 방법';

CREATE UNIQUE INDEX PK_PAY_TYPE
	ON PAY_TYPE (
		PAY_TYPE_ID ASC
	);

ALTER TABLE PAY_TYPE
	ADD
		CONSTRAINT PK_PAY_TYPE
		PRIMARY KEY (
			PAY_TYPE_ID
		);

/* FAQ */
CREATE TABLE FAQ_BOARD (
	FAQ_ID NUMBER NOT NULL, /* FAQ ID */
	FAQ_TITLE VARCHAR2(2000), /* FAQ 제목 */
	FAQ_CONTENT VARCHAR2(4000), /* FAQ 내용 */
	FAQ_CTGR_ID NUMBER, /* FAQ 카테고리 ID */
	ADMIN_ID VARCHAR2(100) /* 관리자 ID */
);

COMMENT ON TABLE FAQ_BOARD IS 'FAQ';

COMMENT ON COLUMN FAQ_BOARD.FAQ_ID IS 'FAQ ID';

COMMENT ON COLUMN FAQ_BOARD.FAQ_TITLE IS 'FAQ 제목';

COMMENT ON COLUMN FAQ_BOARD.FAQ_CONTENT IS 'FAQ 내용';

COMMENT ON COLUMN FAQ_BOARD.FAQ_CTGR_ID IS 'FAQ 카테고리 ID';

COMMENT ON COLUMN FAQ_BOARD.ADMIN_ID IS '관리자 ID';

CREATE UNIQUE INDEX PK_FAQ_BOARD
	ON FAQ_BOARD (
		FAQ_ID ASC
	);

ALTER TABLE FAQ_BOARD
	ADD
		CONSTRAINT PK_FAQ_BOARD
		PRIMARY KEY (
			FAQ_ID
		);

/* 문의내역 */
CREATE TABLE INQUIRY (
	INQUIRY_ID NUMBER NOT NULL, /* 문의내역 ID */
	INQUIRY_TITLE VARCHAR2(1000), /* 문의내역 제목 */
	INQUIRY_CONTENT VARCHAR2(4000), /* 문의내역 내용 */
	INQUIRY_DATE DATE DEFAULT SYSDATE, /* 문의내역 작성일 */
	BUY_INQUIRY NUMBER, /* 구매관련문의 카테고리 ID */
	ETC_INQUIRY NUMBER, /* 기타문의 카테고리 ID */
	GENERAL_INQUIRY_ID NUMBER, /* 일반상담문의 카테고리  ID */
	MEMBER_ID NUMBER /* 회원 ID */
);

COMMENT ON TABLE INQUIRY IS '문의내역';

COMMENT ON COLUMN INQUIRY.INQUIRY_ID IS '문의내역 ID';

COMMENT ON COLUMN INQUIRY.INQUIRY_TITLE IS '문의내역 제목';

COMMENT ON COLUMN INQUIRY.INQUIRY_CONTENT IS '문의내역 내용';

COMMENT ON COLUMN INQUIRY.INQUIRY_DATE IS '문의내역 작성일';

COMMENT ON COLUMN INQUIRY.BUY_INQUIRY IS '구매관련문의 카테고리 ID';

COMMENT ON COLUMN INQUIRY.ETC_INQUIRY IS '기타문의 카테고리 ID';

COMMENT ON COLUMN INQUIRY.GENERAL_INQUIRY_ID IS '일반상담문의 카테고리  ID';

COMMENT ON COLUMN INQUIRY.MEMBER_ID IS '회원 ID';

CREATE UNIQUE INDEX PK_INQUIRY
	ON INQUIRY (
		INQUIRY_ID ASC
	);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT PK_INQUIRY
		PRIMARY KEY (
			INQUIRY_ID
		);

/* 구매 관련문의 */
CREATE TABLE BUY_INQUIRY (
	BUY_INQUIRY NUMBER NOT NULL, /* 구매관련문의 카테고리 ID */
	BUY_INQUIRY_NAME VARCHAR2(100) /* 구매관련문의 카테고리 명 */
);

COMMENT ON TABLE BUY_INQUIRY IS '구매 관련문의';

COMMENT ON COLUMN BUY_INQUIRY.BUY_INQUIRY IS '구매관련문의 카테고리 ID';

COMMENT ON COLUMN BUY_INQUIRY.BUY_INQUIRY_NAME IS '구매관련문의 카테고리 명';

CREATE UNIQUE INDEX PK_BUY_INQUIRY
	ON BUY_INQUIRY (
		BUY_INQUIRY ASC
	);

ALTER TABLE BUY_INQUIRY
	ADD
		CONSTRAINT PK_BUY_INQUIRY
		PRIMARY KEY (
			BUY_INQUIRY
		);

/* 일반상담문의 */
CREATE TABLE GENERAL_INQUIRY (
	GENERAL_INQUIRY_ID NUMBER NOT NULL, /* 일반상담문의 카테고리  ID */
	GENERAL_INQUIRY_NAME VARCHAR2(100) /* 일반상담문의 카테고리 명 */
);

COMMENT ON TABLE GENERAL_INQUIRY IS '일반상담문의';

COMMENT ON COLUMN GENERAL_INQUIRY.GENERAL_INQUIRY_ID IS '일반상담문의 카테고리  ID';

COMMENT ON COLUMN GENERAL_INQUIRY.GENERAL_INQUIRY_NAME IS '일반상담문의 카테고리 명';

CREATE UNIQUE INDEX PK_GENERAL_INQUIRY
	ON GENERAL_INQUIRY (
		GENERAL_INQUIRY_ID ASC
	);

ALTER TABLE GENERAL_INQUIRY
	ADD
		CONSTRAINT PK_GENERAL_INQUIRY
		PRIMARY KEY (
			GENERAL_INQUIRY_ID
		);

/* 기타문의 */
CREATE TABLE ETC_INQUIRY (
	ETC_INQUIRY NUMBER NOT NULL, /* 기타문의 카테고리 ID */
	ETC_INQUIRY_NAME VARCHAR2(100) /* 기타문의 카테고리 명 */
);

COMMENT ON TABLE ETC_INQUIRY IS '기타문의';

COMMENT ON COLUMN ETC_INQUIRY.ETC_INQUIRY IS '기타문의 카테고리 ID';

COMMENT ON COLUMN ETC_INQUIRY.ETC_INQUIRY_NAME IS '기타문의 카테고리 명';

CREATE UNIQUE INDEX PK_ETC_INQUIRY
	ON ETC_INQUIRY (
		ETC_INQUIRY ASC
	);

ALTER TABLE ETC_INQUIRY
	ADD
		CONSTRAINT PK_ETC_INQUIRY
		PRIMARY KEY (
			ETC_INQUIRY
		);

/* FAQ 카테고리 */
CREATE TABLE FAQ_CTGR (
	FAQ_CTGR_ID NUMBER NOT NULL, /* FAQ 카테고리 ID */
	FAQ_CTGR_NAME VARCHAR2(100) /* FAQ 카테고리 명 */
);

COMMENT ON TABLE FAQ_CTGR IS 'FAQ 카테고리';

COMMENT ON COLUMN FAQ_CTGR.FAQ_CTGR_ID IS 'FAQ 카테고리 ID';

COMMENT ON COLUMN FAQ_CTGR.FAQ_CTGR_NAME IS 'FAQ 카테고리 명';

CREATE UNIQUE INDEX PK_FAQ_CTGR
	ON FAQ_CTGR (
		FAQ_CTGR_ID ASC
	);

ALTER TABLE FAQ_CTGR
	ADD
		CONSTRAINT PK_FAQ_CTGR
		PRIMARY KEY (
			FAQ_CTGR_ID
		);

/* 주요 카테고리 */
CREATE TABLE MAIN_CTGR (
	MAIN_CTGR_ID NUMBER NOT NULL, /* 주요 카테고리 ID */
	MAIN_CTGR_NAME VARCHAR2(100) /* 주요 카테고리 명 */
);

COMMENT ON TABLE MAIN_CTGR IS '주요 카테고리';

COMMENT ON COLUMN MAIN_CTGR.MAIN_CTGR_ID IS '주요 카테고리 ID';

COMMENT ON COLUMN MAIN_CTGR.MAIN_CTGR_NAME IS '주요 카테고리 명';

CREATE UNIQUE INDEX PK_MAIN_CTGR
	ON MAIN_CTGR (
		MAIN_CTGR_ID ASC
	);

ALTER TABLE MAIN_CTGR
	ADD
		CONSTRAINT PK_MAIN_CTGR
		PRIMARY KEY (
			MAIN_CTGR_ID
		);

/* 상품 대분류 */
CREATE TABLE LARGE_CTGR (
	LARGE_CTGR_ID NUMBER NOT NULL, /* 상품 대분류 ID */
	LARGE_CTGR_NAME VARCHAR2(100), /* 상품 대분류 명 */
	MAIN_CTGR_ID NUMBER /* 주요 카테고리 ID */
);

COMMENT ON TABLE LARGE_CTGR IS '상품 대분류';

COMMENT ON COLUMN LARGE_CTGR.LARGE_CTGR_ID IS '상품 대분류 ID';

COMMENT ON COLUMN LARGE_CTGR.LARGE_CTGR_NAME IS '상품 대분류 명';

COMMENT ON COLUMN LARGE_CTGR.MAIN_CTGR_ID IS '주요 카테고리 ID';

CREATE UNIQUE INDEX PK_LARGE_CTGR
	ON LARGE_CTGR (
		LARGE_CTGR_ID ASC
	);

ALTER TABLE LARGE_CTGR
	ADD
		CONSTRAINT PK_LARGE_CTGR
		PRIMARY KEY (
			LARGE_CTGR_ID
		);

/* 상품 중분류 */
CREATE TABLE MEDIUM_CTGR (
	MEDIUM_CTGR_ID NUMBER NOT NULL, /* 상품 중분류 ID */
	MEDIUM_CTGR_NAME VARCHAR2(100), /* 상품 중분류 명 */
	LARGE_CTGR_ID NUMBER /* 상품 대분류 ID */
);

COMMENT ON TABLE MEDIUM_CTGR IS '상품 중분류';

COMMENT ON COLUMN MEDIUM_CTGR.MEDIUM_CTGR_ID IS '상품 중분류 ID';

COMMENT ON COLUMN MEDIUM_CTGR.MEDIUM_CTGR_NAME IS '상품 중분류 명';

COMMENT ON COLUMN MEDIUM_CTGR.LARGE_CTGR_ID IS '상품 대분류 ID';

CREATE UNIQUE INDEX PK_MEDIUM_CTGR
	ON MEDIUM_CTGR (
		MEDIUM_CTGR_ID ASC
	);

ALTER TABLE MEDIUM_CTGR
	ADD
		CONSTRAINT PK_MEDIUM_CTGR
		PRIMARY KEY (
			MEDIUM_CTGR_ID
		);

/* 상품 소분류 */
CREATE TABLE SMALL_CTGR (
	SMALL_CTGR_ID NUMBER NOT NULL, /* 상품 소분류 ID */
	SMALL_CTGR_NAME VARCHAR2(100), /* 상품 소분류 명 */
	MEDIUM_CTGR_ID NUMBER /* 상품 중분류 ID */
);

COMMENT ON TABLE SMALL_CTGR IS '상품 소분류';

COMMENT ON COLUMN SMALL_CTGR.SMALL_CTGR_ID IS '상품 소분류 ID';

COMMENT ON COLUMN SMALL_CTGR.SMALL_CTGR_NAME IS '상품 소분류 명';

COMMENT ON COLUMN SMALL_CTGR.MEDIUM_CTGR_ID IS '상품 중분류 ID';

CREATE UNIQUE INDEX PK_SMALL_CTGR
	ON SMALL_CTGR (
		SMALL_CTGR_ID ASC
	);

ALTER TABLE SMALL_CTGR
	ADD
		CONSTRAINT PK_SMALL_CTGR
		PRIMARY KEY (
			SMALL_CTGR_ID
		);

/* 상품 좋아요 */
CREATE TABLE PD_LIKE (
	PD_LIKE_ID NUMBER NOT NULL, /* 상품 좋아요 ID */
	MEMBER_ID NUMBER, /* 회원 ID */
	PD_ID NUMBER /* 상품 ID */
);

COMMENT ON TABLE PD_LIKE IS '상품 좋아요';

COMMENT ON COLUMN PD_LIKE.PD_LIKE_ID IS '상품 좋아요 ID';

COMMENT ON COLUMN PD_LIKE.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN PD_LIKE.PD_ID IS '상품 ID';

CREATE UNIQUE INDEX PK_PD_LIKE
	ON PD_LIKE (
		PD_LIKE_ID ASC
	);

ALTER TABLE PD_LIKE
	ADD
		CONSTRAINT PK_PD_LIKE
		PRIMARY KEY (
			PD_LIKE_ID
		);

/* 상품 리뷰 */
CREATE TABLE PRODUCT_REVIEW (
	PD_REVIEW_ID NUMBER NOT NULL, /* 상품리뷰 ID */
	REVIEW_CONTENT VARCHAR2(4000), /* 리뷰내용 */
	PD_ID NUMBER, /* 상품 ID */
	MEMBER_ID NUMBER, /* 회원 ID */
	REVIEW_GRADE_ NUMBER(1) /* 상품평점 ID */
);

COMMENT ON TABLE PRODUCT_REVIEW IS '상품 리뷰';

COMMENT ON COLUMN PRODUCT_REVIEW.PD_REVIEW_ID IS '상품리뷰 ID';

COMMENT ON COLUMN PRODUCT_REVIEW.REVIEW_CONTENT IS '리뷰내용';

COMMENT ON COLUMN PRODUCT_REVIEW.PD_ID IS '상품 ID';

COMMENT ON COLUMN PRODUCT_REVIEW.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN PRODUCT_REVIEW.REVIEW_GRADE_ IS '상품평점 ID';

CREATE UNIQUE INDEX PK_PRODUCT_REVIEW
	ON PRODUCT_REVIEW (
		PD_REVIEW_ID ASC
	);

ALTER TABLE PRODUCT_REVIEW
	ADD
		CONSTRAINT PK_PRODUCT_REVIEW
		PRIMARY KEY (
			PD_REVIEW_ID
		);

/* 상품평점 */
CREATE TABLE PRODUCT_GRADE (
	PD_GRADE_ID NUMBER(1) NOT NULL, /* 상품평점 ID */
	PD_GRADE NUMBER DEFAULT 0, /* 평점 */
	PD_ID NUMBER, /* 상품 ID */
	MEMBER_ID NUMBER /* 회원 ID */
);

COMMENT ON TABLE PRODUCT_GRADE IS '상품평점';

COMMENT ON COLUMN PRODUCT_GRADE.PD_GRADE_ID IS '상품평점 ID';

COMMENT ON COLUMN PRODUCT_GRADE.PD_GRADE IS '평점';

COMMENT ON COLUMN PRODUCT_GRADE.PD_ID IS '상품 ID';

COMMENT ON COLUMN PRODUCT_GRADE.MEMBER_ID IS '회원 ID';

CREATE UNIQUE INDEX PK_PRODUCT_GRADE
	ON PRODUCT_GRADE (
		PD_GRADE_ID ASC
	);

ALTER TABLE PRODUCT_GRADE
	ADD
		CONSTRAINT PK_PRODUCT_GRADE
		PRIMARY KEY (
			PD_GRADE_ID
		);

/* 상품 이미지 */
CREATE TABLE PRODUCT_IMAGE (
	PD_IMAGE_ID NUMBER NOT NULL, /* 상품이미지 ID */
	PD_IMAGE_URL VARCHAR2(4000), /* 상품이미지 URL */
	PD_INFO_IMAGE_URL VARCHAR2(4000), /* 상품설명이미지 URL */
	PD_ID NUMBER /* 상품 ID */
);

COMMENT ON TABLE PRODUCT_IMAGE IS '상품 이미지';

COMMENT ON COLUMN PRODUCT_IMAGE.PD_IMAGE_ID IS '상품이미지 ID';

COMMENT ON COLUMN PRODUCT_IMAGE.PD_IMAGE_URL IS '상품이미지 URL';

COMMENT ON COLUMN PRODUCT_IMAGE.PD_INFO_IMAGE_URL IS '상품설명이미지 URL';

COMMENT ON COLUMN PRODUCT_IMAGE.PD_ID IS '상품 ID';

CREATE UNIQUE INDEX PK_PRODUCT_IMAGE
	ON PRODUCT_IMAGE (
		PD_IMAGE_ID ASC
	);

ALTER TABLE PRODUCT_IMAGE
	ADD
		CONSTRAINT PK_PRODUCT_IMAGE
		PRIMARY KEY (
			PD_IMAGE_ID
		);

/* 상품 QnA */
CREATE TABLE PRODUCT_QNA (
	PD_QNA_ID NUMBER NOT NULL, /* 상품 QnA ID */
	PD_CONTENT VARCHAR2(4000), /* 상품QnA 내용 */
	IS_SECRET_CONTENT NUMBER(1), /* 비밀글 유무 */
	PD_ID NUMBER, /* 상품 ID */
	MEMBER_ID NUMBER, /* 회원 ID */
	PD_QNA_CTGR_ID NUMBER /* 카테고리 ID */
);

COMMENT ON TABLE PRODUCT_QNA IS '상품 QnA';

COMMENT ON COLUMN PRODUCT_QNA.PD_QNA_ID IS '상품 QnA ID';

COMMENT ON COLUMN PRODUCT_QNA.PD_CONTENT IS '상품QnA 내용';

COMMENT ON COLUMN PRODUCT_QNA.IS_SECRET_CONTENT IS '비밀글 유무';

COMMENT ON COLUMN PRODUCT_QNA.PD_ID IS '상품 ID';

COMMENT ON COLUMN PRODUCT_QNA.MEMBER_ID IS '회원 ID';

COMMENT ON COLUMN PRODUCT_QNA.PD_QNA_CTGR_ID IS '카테고리 ID';

CREATE UNIQUE INDEX PK_PRODUCT_QNA
	ON PRODUCT_QNA (
		PD_QNA_ID ASC
	);

ALTER TABLE PRODUCT_QNA
	ADD
		CONSTRAINT PK_PRODUCT_QNA
		PRIMARY KEY (
			PD_QNA_ID
		);

/* 상품 QnA 카테고리 */
CREATE TABLE PRODUCT_QNA_CTGR (
	PD_QNA_CTGR_ID NUMBER NOT NULL, /* 카테고리 ID */
	PD_QNA_CTGR_NAME VARCHAR2(100) /* 카테고리명 */
);

COMMENT ON TABLE PRODUCT_QNA_CTGR IS '상품 QnA 카테고리';

COMMENT ON COLUMN PRODUCT_QNA_CTGR.PD_QNA_CTGR_ID IS '카테고리 ID';

COMMENT ON COLUMN PRODUCT_QNA_CTGR.PD_QNA_CTGR_NAME IS '카테고리명';

CREATE UNIQUE INDEX PK_PRODUCT_QNA_CTGR
	ON PRODUCT_QNA_CTGR (
		PD_QNA_CTGR_ID ASC
	);

ALTER TABLE PRODUCT_QNA_CTGR
	ADD
		CONSTRAINT PK_PRODUCT_QNA_CTGR
		PRIMARY KEY (
			PD_QNA_CTGR_ID
		);

/* 상품옵션 */
CREATE TABLE PRODUCT_OPTION (
	PD_OPTION_ID NUMBER NOT NULL, /* 상품옵션 ID */
	LARGE_CTGR_ID NUMBER, /* 상품 대분류 ID */
	PD_OPTION_NAME VARCHAR2(1000) /* 상품옵션 */
);

COMMENT ON TABLE PRODUCT_OPTION IS '상품옵션';

COMMENT ON COLUMN PRODUCT_OPTION.PD_OPTION_ID IS '상품옵션 ID';

COMMENT ON COLUMN PRODUCT_OPTION.LARGE_CTGR_ID IS '상품 대분류 ID';

COMMENT ON COLUMN PRODUCT_OPTION.PD_OPTION_NAME IS '상품옵션';

CREATE UNIQUE INDEX PK_PRODUCT_OPTION
	ON PRODUCT_OPTION (
		PD_OPTION_ID ASC
	);

ALTER TABLE PRODUCT_OPTION
	ADD
		CONSTRAINT PK_PRODUCT_OPTION
		PRIMARY KEY (
			PD_OPTION_ID
		);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_COUPON_TO_MEMBER
		FOREIGN KEY (
			COUPON_ID
		)
		REFERENCES COUPON (
			COUPON_ID
		);

ALTER TABLE MEMBER
	ADD
		CONSTRAINT FK_GRADE_TO_MEMBER
		FOREIGN KEY (
			GRADE_ID
		)
		REFERENCES GRADE (
			GRADE_ID
		);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT FK_BRAND_TO_PRODUCT
		FOREIGN KEY (
			BRAND_ID
		)
		REFERENCES BRAND (
			BRAND_ID
		);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT FK_MAIN_CTGR_TO_PRODUCT
		FOREIGN KEY (
			MAIN_CTGR_ID
		)
		REFERENCES MAIN_CTGR (
			MAIN_CTGR_ID
		);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT FK_LARGE_CTGR_TO_PRODUCT
		FOREIGN KEY (
			LARGE_CTGR_ID
		)
		REFERENCES LARGE_CTGR (
			LARGE_CTGR_ID
		);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT FK_MEDIUM_CTGR_TO_PRODUCT
		FOREIGN KEY (
			MEDIUM_CTGR_ID
		)
		REFERENCES MEDIUM_CTGR (
			MEDIUM_CTGR_ID
		);

ALTER TABLE PRODUCT
	ADD
		CONSTRAINT FK_SMALL_CTGR_TO_PRODUCT
		FOREIGN KEY (
			SMALL_CTGR_ID
		)
		REFERENCES SMALL_CTGR (
			SMALL_CTGR_ID
		);

ALTER TABLE BRAND_LIKE
	ADD
		CONSTRAINT FK_MEMBER_TO_BRAND_LIKE
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE BRAND_LIKE
	ADD
		CONSTRAINT FK_BRAND_TO_BRAND_LIKE
		FOREIGN KEY (
			BRAND_ID
		)
		REFERENCES BRAND (
			BRAND_ID
		);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_PRODUCT_TO_REVIEW
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_REVIEW
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE CART
	ADD
		CONSTRAINT FK_MEMBER_TO_CART
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE CART
	ADD
		CONSTRAINT FK_PRODUCT_TO_CART
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE NOTICE_BOARD
	ADD
		CONSTRAINT FK_ADMIN_TO_NOTICE_BOARD
		FOREIGN KEY (
			ADMIN_ID
		)
		REFERENCES ADMIN (
			ADMIN_ID
		);

ALTER TABLE DELIVERY
	ADD
		CONSTRAINT FK_PAY_TO_DELIVERY
		FOREIGN KEY (
			PAY_ID
		)
		REFERENCES PAY (
			PAY_ID
		);

ALTER TABLE PAY
	ADD
		CONSTRAINT FK_MEMBER_TO_PAY
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PAY
	ADD
		CONSTRAINT FK_PAY_TYPE_TO_PAY
		FOREIGN KEY (
			PAY_TYPE_ID
		)
		REFERENCES PAY_TYPE (
			PAY_TYPE_ID
		);

ALTER TABLE PAY
	ADD
		CONSTRAINT FK_PRODUCT_TO_PAY
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE PAY
	ADD
		CONSTRAINT FK_COUPON_TO_PAY
		FOREIGN KEY (
			COUPON_ID
		)
		REFERENCES COUPON (
			COUPON_ID
		);

ALTER TABLE REFUND
	ADD
		CONSTRAINT FK_PAY_TO_REFUND
		FOREIGN KEY (
			PAY_ID
		)
		REFERENCES PAY (
			PAY_ID
		);

ALTER TABLE FAQ_BOARD
	ADD
		CONSTRAINT FK_FAQ_CTGR_TO_FAQ_BOARD
		FOREIGN KEY (
			FAQ_CTGR_ID
		)
		REFERENCES FAQ_CTGR (
			FAQ_CTGR_ID
		);

ALTER TABLE FAQ_BOARD
	ADD
		CONSTRAINT FK_ADMIN_TO_FAQ_BOARD
		FOREIGN KEY (
			ADMIN_ID
		)
		REFERENCES ADMIN (
			ADMIN_ID
		);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT FK_BUY_INQUIRY_TO_INQUIRY
		FOREIGN KEY (
			BUY_INQUIRY
		)
		REFERENCES BUY_INQUIRY (
			BUY_INQUIRY
		);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT FK_ETC_INQUIRY_TO_INQUIRY
		FOREIGN KEY (
			ETC_INQUIRY
		)
		REFERENCES ETC_INQUIRY (
			ETC_INQUIRY
		);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT FK_GENERAL_INQUIRY_TO_INQUIRY
		FOREIGN KEY (
			GENERAL_INQUIRY_ID
		)
		REFERENCES GENERAL_INQUIRY (
			GENERAL_INQUIRY_ID
		);

ALTER TABLE INQUIRY
	ADD
		CONSTRAINT FK_MEMBER_TO_INQUIRY
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE LARGE_CTGR
	ADD
		CONSTRAINT FK_MAIN_CTGR_TO_LARGE_CTGR
		FOREIGN KEY (
			MAIN_CTGR_ID
		)
		REFERENCES MAIN_CTGR (
			MAIN_CTGR_ID
		);

ALTER TABLE MEDIUM_CTGR
	ADD
		CONSTRAINT FK_LARGE_CTGR_TO_MEDIUM_CTGR
		FOREIGN KEY (
			LARGE_CTGR_ID
		)
		REFERENCES LARGE_CTGR (
			LARGE_CTGR_ID
		);

ALTER TABLE SMALL_CTGR
	ADD
		CONSTRAINT FK_MEDIUM_CTGR_TO_SMALL_CTGR
		FOREIGN KEY (
			MEDIUM_CTGR_ID
		)
		REFERENCES MEDIUM_CTGR (
			MEDIUM_CTGR_ID
		);

ALTER TABLE PD_LIKE
	ADD
		CONSTRAINT FK_MEMBER_TO_PD_LIKE
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PD_LIKE
	ADD
		CONSTRAINT FK_PRODUCT_TO_PD_LIKE
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE PRODUCT_REVIEW
	ADD
		CONSTRAINT FK_PRODUCT_TO_PRODUCT_REVIEW
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE PRODUCT_REVIEW
	ADD
		CONSTRAINT FK_MEMBER_TO_PRODUCT_REVIEW
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PRODUCT_REVIEW
	ADD
		CONSTRAINT FK_PRODUCT_GRADE_TO_PRODUCT_REVIEW
		FOREIGN KEY (
			REVIEW_GRADE_
		)
		REFERENCES PRODUCT_GRADE (
			PD_GRADE_ID
		);

ALTER TABLE PRODUCT_GRADE
	ADD
		CONSTRAINT FK_PRODUCT_TO_PRODUCT_GRADE
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE PRODUCT_GRADE
	ADD
		CONSTRAINT FK_MEMBER_TO_PRODUCT_GRADE
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PRODUCT_IMAGE
	ADD
		CONSTRAINT FK_PRODUCT_TO_PRODUCT_IMAGE
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE PRODUCT_QNA
	ADD
		CONSTRAINT FK_PRODUCT_TO_PRODUCT_QNA
		FOREIGN KEY (
			PD_ID
		)
		REFERENCES PRODUCT (
			PD_ID
		);

ALTER TABLE PRODUCT_QNA
	ADD
		CONSTRAINT FK_MEMBER_TO_PRODUCT_QNA
		FOREIGN KEY (
			MEMBER_ID
		)
		REFERENCES MEMBER (
			MEMBER_ID
		);

ALTER TABLE PRODUCT_QNA
	ADD
		CONSTRAINT FK_PRODUCT_QNA_CTGR_TO_PRODUCT_QNA
		FOREIGN KEY (
			PD_QNA_CTGR_ID
		)
		REFERENCES PRODUCT_QNA_CTGR (
			PD_QNA_CTGR_ID
		);

ALTER TABLE PRODUCT_OPTION
	ADD
		CONSTRAINT FK_LARGE_CTGR_TO_PRODUCT_OPTION
		FOREIGN KEY (
			LARGE_CTGR_ID
		)
		REFERENCES LARGE_CTGR (
			LARGE_CTGR_ID
		);